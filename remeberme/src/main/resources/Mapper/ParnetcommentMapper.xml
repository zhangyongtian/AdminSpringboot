<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.biyeseji.remeberme.mapper.ParnetcommentMapper">
  <cache-ref namespace="com.zhang.biyeseji.remeberme.mapper.SoncommentMapper"/>
  <resultMap id="BaseResultMap" type="com.zhang.biyeseji.remeberme.pojo.Parnetcomment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parnetcommentid" jdbcType="INTEGER" property="parnetcommentid" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="zangcount" jdbcType="INTEGER" property="zangcount" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="blogid" jdbcType="INTEGER" property="blogid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parnetcommentid, comment, createtime, zangcount, likes, blogid, userid, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.zhang.biyeseji.remeberme.pojo.ParnetcommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parnetcomment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAllCommend" resultType="com.zhang.biyeseji.remeberme.pojo.Parnetcomment">
    select * from parnetcomment
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from parnetcomment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from parnetcomment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhang.biyeseji.remeberme.pojo.ParnetcommentExample">
    delete from parnetcomment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhang.biyeseji.remeberme.pojo.Parnetcomment" useGeneratedKeys="true" keyProperty="id">
    insert into parnetcomment (id, parnetcommentid, comment, 
      createtime, zangcount, likes, 
      blogid, userid, updatetime
      )
    values (#{id,jdbcType=INTEGER}, #{parnetcommentid,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{zangcount,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER}, 
      #{blogid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhang.biyeseji.remeberme.pojo.Parnetcomment">
    insert into parnetcomment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parnetcommentid != null">
        parnetcommentid,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="zangcount != null">
        zangcount,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="blogid != null">
        blogid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parnetcommentid != null">
        #{parnetcommentid,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="zangcount != null">
        #{zangcount,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="blogid != null">
        #{blogid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhang.biyeseji.remeberme.pojo.ParnetcommentExample" resultType="java.lang.Long">
    select count(*) from parnetcomment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update parnetcomment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parnetcommentid != null">
        parnetcommentid = #{record.parnetcommentid,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.zangcount != null">
        zangcount = #{record.zangcount,jdbcType=INTEGER},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.blogid != null">
        blogid = #{record.blogid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update parnetcomment
    set id = #{record.id,jdbcType=INTEGER},
      parnetcommentid = #{record.parnetcommentid,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      zangcount = #{record.zangcount,jdbcType=INTEGER},
      likes = #{record.likes,jdbcType=INTEGER},
      blogid = #{record.blogid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhang.biyeseji.remeberme.pojo.Parnetcomment">
    update parnetcomment
    <set>
      <if test="parnetcommentid != null">
        parnetcommentid = #{parnetcommentid,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="zangcount != null">
        zangcount = #{zangcount,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="blogid != null">
        blogid = #{blogid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhang.biyeseji.remeberme.pojo.Parnetcomment">
    update parnetcomment
    set parnetcommentid = #{parnetcommentid,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      zangcount = #{zangcount,jdbcType=INTEGER},
      likes = #{likes,jdbcType=INTEGER},
      blogid = #{blogid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>